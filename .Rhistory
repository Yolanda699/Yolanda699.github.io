show.legend = FALSE) +  # Exclude from legend
scale_fill_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Education and Alcohol Consumption",
x = "Education Level",
y = "Percentage",
fill = "Consumption Level")
library(ggplot2)
library(dplyr)
education_caff_counts <- drug_or %>%
group_by(Education, Caff) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Education) %>%
mutate(percentage = count / sum(count) * 100)
education_levels_ordered <- c(
"Doctorate degree", "Masters degree", "University degree",
"Professional certificate/ diploma",
"Some college or university, no certificate or degree",
"Left school at 18 years", "Left school at 17 years",
"Left school at 16 years", "Left school before 16 years"
)
education_caff_counts$Education <- factor(education_caff_counts$Education, levels = education_levels_ordered)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(education_caff_counts, aes(x = Education, y = percentage, fill = Caff)) +
geom_bar(stat = "identity") +
geom_text(data = subset(education_caff_counts, percentage > 5),
aes(label = paste0(round(percentage), "%")),
position = position_stack(vjust = 0.7),
size = 3,
color = "white",
show.legend = FALSE) +
scale_fill_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Education and Caffeine Consumption",
x = "Education Level",
y = "Percentage",
fill = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country, levels = country_levels_ordered)
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, fill = Alcohol)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Country Level",
y = "Percentage",
fill = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, fill = Alcohol)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
fill = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = -0.5, size = 3) +  # Add percentage labels
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = -0.5, size = 1) +  # Add percentage labels
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = -0.5, size = 2) +  # Add percentage labels
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 2) +  # Add percentage labels
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 2, color="black") +  # Add percentage labels
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 3, color = "black", bg = "yellow", show.legend = FALSE) +  # Add percentage labels with background color
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 2, color = "black", bg = "yellow", show.legend = FALSE) +  # Add percentage labels with background color
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 2, color = "black", bg = "yellow") +  # Add percentage labels with background color
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggtext)
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.7, size = 2, color = "black") +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 2, color = "black") +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = 0.5, size = 3, color = "black") +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = -0.5, size = 3, color = "black") +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
geom_text(aes(label = paste0(round(percentage), "%")), vjust = -0.2, size = 3, color = "black") +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_alcohol_counts <- drug_or %>%
group_by(Country, Alcohol) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_alcohol_counts$Country <- factor(country_alcohol_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_alcohol_counts, aes(x = Country, y = percentage, color = Alcohol, group = Alcohol)) +
geom_line() +
geom_point() +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Alcohol Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(ggplot2)
library(dplyr)
country_caff_counts <- drug_or %>%
group_by(Country, Caff) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Country) %>%
mutate(percentage = count / sum(count) * 100)
country_caff_counts$Country <- factor(country_caff_counts$Country)
custom_colours <- c("#aed0ee", "#a3bbdb", "#88abda", "#8aabcc", "#6f94cd", "#5976ba", "#106898", "#12507b", "#003460")
ggplot(country_caff_counts, aes(x = Country, y = percentage, color = Caff, group = Caff)) +
geom_line() +
geom_point() +
scale_color_manual(values = custom_colours, name = "Consumption Level") +
theme_minimal() +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
) +
labs(title = "Country and Caffeine Consumption",
x = "Countries of origin",
y = "Percentage",
color = "Consumption Level")
library(shiny)
library(shiny)
# Define UI for feedback submission
feedback_ui <- fluidPage(
textAreaInput("feedback", label = "Feedback:", placeholder = "Enter your feedback here..."),
actionButton("submit", "Submit Feedback")
)
# Define server logic
feedback_server <- function(input, output) {
observeEvent(input$submit, {
# Get feedback input
feedback_text <- isolate(input$feedback)
# Do something with the feedback (e.g., store in a file or database)
# For demonstration, we'll print it here
print(feedback_text)
# Display a confirmation message
showModal(modalDialog(
title = "Feedback Submitted",
"Thank you for your feedback!",
footer = NULL
))
})
}
# Create Shiny app object
feedback_app <- shinyApp(ui = feedback_ui, server = feedback_server)
# Run the app
feedback_app
library(shiny)
# Define UI for feedback submission
feedback_ui <- fluidPage(
textAreaInput("feedback", label = "Feedback:", placeholder = "Enter your feedback here..."),
actionButton("submit", "Submit Feedback")
)
# Define server logic
feedback_server <- function(input, output) {
observeEvent(input$submit, {
# Get feedback input
feedback_text <- isolate(input$feedback)
# Do something with the feedback (e.g., store in a file or database)
# For demonstration, we'll print it here
print(feedback_text)
# Display a confirmation message
showModal(modalDialog(
title = "Feedback Submitted",
"Thank you for your feedback!",
footer = NULL
))
})
}
# Create Shiny app object
feedback_app <- shinyApp(ui = feedback_ui, server = feedback_server)
# Run the app
feedback_app
source("~/Desktop/NUS/NUS Y2S2/NM2207/NM2207 Project/Yolanda699.github.io/app2/app2.R")
source("~/Desktop/NUS/NUS Y2S2/NM2207/NM2207 Project/Yolanda699.github.io/app2/app2.R")
runApp('app2/app2.R')
runApp('app2/app2.R')
runApp('app2/app2.R')
runApp('app2/app2.R')
runApp('app2/app2.R')
